.page {
  --primary-color: #2563eb;
  --primary-hover: #1d4ed8;
  --gray-rgb: 0, 0, 0;
  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);

  --button-primary-hover: #383838;
  --button-secondary-hover: #f2f2f2;

  display: flex;
  flex-direction: column;
  min-height: 100vh;
  font-family: Arial, Helvetica, sans-serif;
}

@media (prefers-color-scheme: dark) {
  .page {
    --primary-color: #3b82f6;
    --primary-hover: #60a5fa;
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
}

.main {
  flex: 1;
  padding: 20px;
}

.hero {
  text-align: center;
  padding: 60px 20px;
  background-color: var(--background);
  color: var(--foreground);
}

.title {
  font-size: 3.5rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
  background: linear-gradient(to right, var(--primary-color), #4f46e5);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  line-height: 1.2;
}

.heroText {
  font-size: 1.25rem;
  color: var(--gray-600);
  margin-bottom: 2rem;
  line-height: 1.6;
}

.ctas {
  margin-top: 20px;
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-top: 2rem;
}

.cta {
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-weight: 500;
  transition: all 0.2s ease;
  text-decoration: none;
  background-color: var(--primary-color);
  color: var(--foreground);
}

.cta:hover {
  background-color: var(--primary-hover);
}

.primary {
  background-color: var(--primary-color);
  color: white;
  border: none;
}

.primary:hover {
  background-color: var(--primary-hover);
  transform: translateY(-1px);
}

.secondary {
  background-color: #f0f0f0;
  color: #333;
  border: 1px solid #ccc;
}

.secondary:hover {
  background-color: #e0e0e0;
  transform: translateY(-1px);
}

.features {
  padding: 4rem 0;
}

.sectionTitle {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 3rem;
}

.featureGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  padding: 0 1rem;
}

.featureCard {
  padding: 2rem;
  border-radius: 1rem;
  background: var(--gray-alpha-100);
  text-align: center;
  transition: transform 0.2s ease;
}

.featureCard:hover {
  transform: translateY(-5px);
}

.featureIcon {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.featureCard h3 {
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
}

.featureCard p {
  color: var(--gray-600);
  line-height: 1.6;
}

.joinSection {
  text-align: center;
  padding: 4rem 0;
  background: var(--gray-alpha-100);
  border-radius: 1rem;
  margin: 2rem 0;
}

.joinSection h2 {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.joinSection p {
  margin-bottom: 2rem;
  color: var(--gray-600);
}

.footer {
  background: var(--gray-alpha-100);
  padding: 2rem 0;
  margin-top: auto;
}

.footerContent {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.footerLinks {
  display: flex;
  gap: 2rem;
}

.footerLinks a {
  color: inherit;
  text-decoration: none;
  transition: color 0.2s ease;
}

.footerLinks a:hover {
  color: var(--primary-color);
}

.copyright {
  color: var(--gray-600);
  font-size: 0.875rem;
}

@media (max-width: 768px) {
  .title {
    font-size: 2.5rem;
  }

  .heroText {
    font-size: 1.125rem;
  }

  .ctas {
    flex-direction: column;
    align-items: stretch;
  }

  .featureGrid {
    grid-template-columns: 1fr;
  }

  .footerLinks {
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }
}

@media (max-width: 600px) {
  .title {
    font-size: 2.5rem;
  }

  .heroText {
    font-size: 1.125rem;
  }

  .ctas {
    flex-direction: column;
  }

  .ctas a {
    font-size: 14px;
    height: 40px;
    padding: 0 16px;
  }

  a.secondary {
    min-width: auto;
  }

  .footer {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}
